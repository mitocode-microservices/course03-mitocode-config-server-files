server:
  port: ${CUSTOM.SERVER.PORT:9080}

# Eureka Client Config
eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

# Circuit Breaker configuration
resilience4j:
  circuitbreaker:
    configs:
      circuitBreakerProduct:
        slidingWindowSize: 16
        failureRateThreshold: 75
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 10
        slowCallDurationThreshold: 2s
        slowCallRateThreshold: 50
    instances:
      product-cb:
        base-config: circuitBreakerProduct
  timelimiter:
    configs:
      timeLimiterProduct:
        timeoutDuration: 2s
    instances:
      default:
        base-config: timeLimiterProduct

# Cloud Gateway Routes
spring:
  cloud:
    gateway:
      routes: 

        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/product-service/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: product-cb
                statusCode: 400, 401, 403, 500, 503
                fallbackUri: forward:/api/user-service/user

        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user-service/**
          filters:
            - StripPrefix=2
            - CustomFilterMitocode=MitocodeKey, MitocodeValue

            # - name: CustomFilter:
            #   args:
            #     headerKey: MitocodeKey
            #     headerValue: MitocodeValue

            # - AddRequestHeader=MitocodeKey, MitocodeValue
            # - AddResponseHeader=MitocodeHeader, MitocodeHeaderValue
            - AddRequestParameter=role, ROLE_USER
  main:
    web-application-type: reactive